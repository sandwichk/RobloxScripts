-- \\ Discord
local HttpService = game:GetService("HttpService")
local request = (syn and syn.request) or (http and http.request) or http_request
local BadWareFolder = "BadWareDupe/"

if not isfolder("BadWareDupe") then makefolder("BadWareDupe") end

queue_on_teleport([[
loadstring(game:HttpGet("https://raw.githubusercontent.com/sandwichk/RobloxScripts/main/Scripts/BadWare/Dupe/AFSim", true))()
]])

local KickPlayer = game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("KickPlayer")
local old;
old = hookmetamethod(game, "__namecall", function(Self, ...)
	local Args = {...}
	local Method = getnamecallmethod()

	if not checkcaller() and Method == "FireServer" and Self == KickPlayer then
		print("Blocked attempt anti cheat kick.")
		return
	end
	return old(Self,...)
end) print("Sucess Executed Bypass Anti Cheat")

-- \\ Start
local UID = 14671621698
local BadWare = game:GetObjects("rbxassetid://"..UID)[1]

-- \\ Services
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Tween = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
getgenv().Enabled = false
getgenv().UIClosed = false
getgenv().Hidden = false

-- \\ UI
BadWare.Parent = game.CoreGui
local Debounce = false
local Main = BadWare.Main
local Status = Main.Status.Title
local Buttons = Main.Buttons
local Buttons2 = Main.Buttons2
Status.Text = 'Status: <font color="#ff5252">Disabled</font>'

-- \\ Functions

local KeyToHide = getgenv().HideUI or Enum.KeyCode.P
UserInputService.InputBegan:Connect(function(input, processed)
	if (input.KeyCode == KeyToHide and not processed) then
		if Hidden then
			Hidden = false
			BadWare.Enabled = true
		else
			Hidden = true
			BadWare.Enabled = false
		end
	end
end)

function getLowestPet(Size)
	local LevelCap = Size or math.huge
	for _, Data in pairs(require(game.ReplicatedStorage.ModuleScripts.LocalDairebStore).GetStoreProxy("GameData"):GetData("Pets")) do
		if not Data.Locked and Data.Level < LevelCap then
			return Data.UID
		end
	end
end

local VirtualUser = game:GetService("VirtualUser")
Player.Idled:connect(function()
	VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   	wait(1)
   	VirtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

function Hide(Var)
	if not Debounce then
		Debounce = true
		Main.Buttons2.Visible = Var
		Main.Buttons.Visible = Var
		Main.Title.Visible = Var
		Main.Status.Visible = Var
		if Var then
			Main.Interact.Visible = not Var
			Main.OpenIcon.Visible = not Var
			Tween:Create(Main, TweenInfo.new(0.2), {Size = UDim2.new(0, 375,0, 175)}):Play()
		else
			Main.Interact.Visible = not Var
			Main.OpenIcon.Visible = not Var
			Tween:Create(Main, TweenInfo.new(0.2), {Size = UDim2.new(0, 50,0, 50)}):Play()
		end
		wait(0.2)
		UIClosed = not UIClosed
	end
	Debounce = false
end

local GUI = Main
local dragging, dragInput, dragStart, startPos = false
local function update(input)
	local delta = input.Position - dragStart
	GUI.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
GUI.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = GUI.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
GUI.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
local function ChangeColor(Path, Color, OldColor)
	Tween:Create(Path, TweenInfo.new(0.2), {BackgroundColor3 = Color}):Play()
	wait(0.2)
	Tween:Create(Path, TweenInfo.new(0.2), {BackgroundColor3 = OldColor}):Play()
end

local VaultInsert = {}
local PetInVault = nil

Buttons.Start.Interact.MouseButton1Click:Connect(function()
	if Enabled then 
		Status.Text = 'Status: <font color="#ffc249">Already Enabled</font>'
		wait(2)
		Status.Text = 'Status: <font color="#85b651">Enabled</font>'
		return 
	end
	Enabled = true
	ChangeColor(Buttons.Start, Color3.fromRGB(175,175,175), Color3.fromRGB(100,100,100))
	PetInVault = getLowestPet()
	game:GetService("ReplicatedStorage").Remote.PetVault:FireServer(PetInVault, true, string.rep("9", 4200000))
	Status.Text = 'Status: <font color="#85b651">Enabled</font>'
end)

Buttons.Rejoin.Interact.MouseButton1Click:Connect(function()
	ChangeColor(Buttons.Rejoin, Color3.fromRGB(175,175,175), Color3.fromRGB(100,100,100))
	game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
	Status.Text = 'Status: <font color="#ffc249">Rejoining</font>'
end)

Buttons2.Close.Interact.MouseButton1Click:Connect(function()
	if UIClosed then return end
	ChangeColor(Buttons2.Close, Color3.fromRGB(255, 150, 150), Color3.fromRGB(255, 75, 75))
	Hide(false)
end)

Main.Interact.MouseButton1Click:Connect(function()
	if not UIClosed then return end
	Hide(true)
end)

Buttons2.Dungeon.Interact.MouseButton1Click:Connect(function()
	if Enabled then
		local A = Status.Text
		Status.Text = 'Status: <font color="#ffc249">Already Enabled</font>'
		wait(2)
		Status.Text = A
		return 
	end
	game:GetService("ReplicatedStorage").Remote.PetVault:FireServer(getLowestPet(), true, string.rep("9", 4200000))
	ChangeColor(Buttons2.Dungeon, Color3.fromRGB(116,209,255), Color3.fromRGB(41, 134, 255))
	Status.Text = 'Status: <font color="#85b651">Infinite Dungeon - Enabled</font>'
end)

Buttons2.DupeUI.Interact.MouseButton1Click:Connect(function()
	if Player.PlayerGui.MainGui.DupeMachine.Visible == false then
		Player.PlayerGui.MainGui.DupeMachine.Visible = true
		Buttons2.DupeUI.Interact.Text = "Dupe Machine Close"
	else
		Player.PlayerGui.MainGui.DupeMachine.Visible = false
		Buttons2.DupeUI.Interact.Text = "Dupe Machine Open"
	end
	ChangeColor(Buttons2.DupeUI, Color3.fromRGB(255, 96, 234), Color3.fromRGB(255, 33, 244))
end)
