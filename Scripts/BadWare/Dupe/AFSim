--[[ Version 38.0.4
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==2) then function v22()local v31=0 -0 ;local v32;while true do if (v31==((570 -(367 + 201)) -1)) then return v32;end if ((619 -(555 + 64))==v31) then v32=v1(v16,v19,v19);v19=v19 + (2 -1) ;v31=1 -0 ;end end end v23=nil;function v23()local v33,v34=v1(v16,v19,v19 + (929 -(214 + 713)) );v19=v19 + 2 ;return (v34 * (65 + 191)) + v33 ;end v18=3;end if (v18==4) then function v25()local v35=v24();local v36=v24();local v37=1 + 0 ;local v38=(v21(v36,1,20) * (((645 + 234) -(282 + 595))^(1669 -(1523 + 114)))) + v35 ;local v39=v21(v36,21,31);local v40=((v21(v36,29 + 3 )==((2 -1) -0)) and  -(1066 -(68 + 734 + 263))) or (1271 -(226 + 1044)) ;if (v39==(0 -0)) then if (v38==(117 -(32 + 85))) then return v40 * 0 ;else v39=(3 -2) + (952 -(802 + 150)) ;v37=(0 -0) + 0 ;end elseif (v39==((5448 -2444) -(892 + 65))) then return ((v38==0) and (v40 * ((2 -1)/(0 -0)))) or (v40 * NaN) ;end return v8(v40,v39-(1877 -(622 + 232)) ) * (v37 + (v38/((352 -(87 + 263))^(232 -((1064 -(915 + 82)) + 113))))) ;end v26=nil;function v26(v41)local v42=0 -0 ;local v43;local v44;while true do if (v42==(2 + 1)) then return v6(v44);end if (v42==2) then v44={};for v93=1 -0 , #v43 do v44[v93]=v2(v1(v3(v43,v93,v93)));end v42=1190 -((1511 -(416 + 26)) + 118) ;end if (v42==0) then v43=nil;if  not v41 then v41=v24();if (v41==(0 + 0)) then return "";end end v42=2 -1 ;end if (v42==(1 -0)) then v43=v3(v16,v19,(v19 + v41) -((60 -41) -(10 + 4 + 4)) );v19=v19 + v41 ;v42=1 + (1 -0) ;end end end v18=5;end if (v18==6) then v29=nil;function v29()local v45=0;local v46;local v47;local v48;local v49;local v50;local v51;local v52;while true do if (v45==(286 -(134 + 151))) then local v91=0;while true do if (v91==0) then v48=nil;v49=nil;v91=1666 -(970 + 695) ;end if (v91~=(1 -0)) then else v45=2;break;end end end if (v45~=0) then else local v92=0;while true do if (v92~=(1991 -(582 + 1408))) then else v45=3 -2 ;break;end if (v92~=(0 -0)) then else v46=0 -0 ;v47=nil;v92=1;end end end if (v45~=(1827 -(1195 + 629))) then else v52=nil;while true do local v95=0;local v96;local v97;while true do if (v95~=(0 -0)) then else v96=241 -(187 + 54) ;v97=nil;v95=781 -(162 + 618) ;end if (v95==(1 + 0)) then while true do if (v96~=(0 + 0)) then else v97=0 -0 ;while true do if (v97~=1) then else if (v46==1) then local v107=0;while true do if (v107~=(0 -0)) then else local v194=0;local v195;while true do if (v194~=(0 + 0)) then else v195=0;while true do if (v195~=0) then else v50={v47,v48,nil,v49};v51=v24();v195=1 -0 ;end if (v195==(1 -0)) then v107=1385 -(746 + 638) ;break;end end break;end end end if ((1 + 0)~=v107) then else v52={};v46=2;break;end end end if (v46==3) then local v108=0;while true do if (v108==(0 -0)) then local v196=0;while true do if (v196==0) then for v340=342 -(218 + 123) ,v24() do v48[v340-(1582 -(1535 + 46)) ]=v29();end return v50;end end end end end break;end if (v97~=(0 + 0)) then else local v106=0 + 0 ;while true do if (v106==(560 -(306 + 254))) then if (v46==0) then local v197=0 + 0 ;local v198;while true do if (v197~=0) then else v198=0 -0 ;while true do if (v198==0) then local v354=0;while true do if (v354~=(1467 -(899 + 568))) then else v47={};v48={};v354=1;end if (1~=v354) then else v198=1;break;end end end if (v198==1) then v49={};v46=1 + 0 ;break;end end break;end end end if (v46==2) then local v199=0 -0 ;local v200;local v201;while true do if (v199~=0) then else v200=603 -(268 + 335) ;v201=nil;v199=291 -(60 + 230) ;end if (v199~=1) then else while true do if (v200~=(572 -(426 + 146))) then else v201=0;while true do if (v201~=(0 + 0)) then else local v372=1456 -(282 + 1174) ;while true do if (v372==(811 -(569 + 242))) then for v383=1,v51 do local v384=0 -0 ;local v385;local v386;local v387;while true do if (v384==0) then local v389=0 + 0 ;while true do if (v389==(1025 -(706 + 318))) then v384=1252 -(721 + 530) ;break;end if (v389~=0) then else v385=0;v386=nil;v389=1;end end end if (v384~=1) then else v387=nil;while true do if (v385==0) then local v395=0;local v396;while true do if (v395==(1271 -(945 + 326))) then v396=0 -0 ;while true do if (v396~=(0 + 0)) then else v386=v22();v387=nil;v396=701 -(271 + 429) ;end if (v396~=(1 + 0)) then else v385=1501 -(1408 + 92) ;break;end end break;end end end if (v385==1) then if (v386==(1087 -(461 + 625))) then v387=v22()~=0 ;elseif (v386==2) then v387=v25();elseif (v386~=3) then else v387=v26();end v52[v383]=v387;break;end end break;end end end v50[3]=v22();v372=1289 -(993 + 295) ;end if ((1 + 0)~=v372) then else v201=1;break;end end end if (v201==1) then for v378=1172 -(418 + 753) ,v24() do local v379=0 + 0 ;local v380;local v381;while true do if (v379~=1) then else while true do if (v380==(0 + 0)) then v381=v22();if (v21(v381,1 + 0 ,1)==0) then local v390=0;local v391;local v392;local v393;local v394;while true do if (0==v390) then local v398=0 + 0 ;while true do if (v398==0) then v391=0;v392=nil;v398=1;end if (v398~=(530 -(406 + 123))) then else v390=1;break;end end end if (v390==(1770 -(1749 + 20))) then v393=nil;v394=nil;v390=1 + 1 ;end if (v390~=2) then else while true do if (v391==(1325 -(1249 + 73))) then if (v21(v393,3,2 + 1 )==(1146 -(466 + 679))) then v394[4]=v52[v394[4]];end v47[v378]=v394;break;end if (0==v391) then local v400=0 -0 ;while true do if (v400~=1) then else v391=2 -1 ;break;end if (v400~=(1900 -(106 + 1794))) then else v392=v21(v381,1 + 1 ,1 + 2 );v393=v21(v381,11 -7 ,16 -10 );v400=1;end end end if (v391==2) then local v401=0;local v402;while true do if (v401~=(114 -(4 + 110))) then else v402=584 -(57 + 527) ;while true do if (1==v402) then v391=3;break;end if (v402==0) then local v407=1427 -(41 + 1386) ;while true do if (v407==1) then v402=104 -(17 + 86) ;break;end if (v407==(0 + 0)) then if (v21(v393,1,1)==(1 -0)) then v394[2]=v52[v394[2]];end if (v21(v393,2,5 -3 )==(167 -(122 + 44))) then v394[3]=v52[v394[5 -2 ]];end v407=3 -2 ;end end end end break;end end end if (v391==(1 + 0)) then local v403=0;local v404;while true do if (v403~=(0 + 0)) then else v404=0 -0 ;while true do if (v404~=1) then else v391=67 -(30 + 35) ;break;end if (v404~=0) then else local v408=0 + 0 ;while true do if (v408==(1257 -(1043 + 214))) then v394={v23(),v23(),nil,nil};if (v392==0) then local v413=1212 -(323 + 889) ;local v414;while true do if ((0 -0)==v413) then v414=0;while true do if (v414==0) then v394[583 -(361 + 219) ]=v23();v394[4]=v23();break;end end break;end end elseif (v392==(321 -(53 + 267))) then v394[3]=v24();elseif (v392==(1 + 1)) then v394[416 -(15 + 398) ]=v24() -((984 -(18 + 964))^(60 -44)) ;elseif (v392~=3) then else local v419=0;local v420;local v421;while true do if (v419~=(0 + 0)) then else local v422=0 + 0 ;while true do if (v422==1) then v419=1;break;end if (v422~=(850 -(20 + 830))) then else v420=0 + 0 ;v421=nil;v422=1;end end end if (v419==1) then while true do if (v420==(126 -(116 + 10))) then v421=0 + 0 ;while true do if ((738 -(542 + 196))~=v421) then else v394[3]=v24() -((3 -1)^(5 + 11)) ;v394[3 + 1 ]=v23();break;end end break;end end break;end end end v408=1;end if (v408~=(1 + 0)) then else v404=2 -1 ;break;end end end end break;end end end end break;end end end break;end end break;end if ((0 -0)~=v379) then else local v388=0;while true do if (1==v388) then v379=1552 -(1126 + 425) ;break;end if (v388~=(405 -(118 + 287))) then else v380=0 -0 ;v381=nil;v388=1;end end end end end v46=3;break;end end break;end end break;end end end v106=1122 -(118 + 1003) ;end if (v106~=1) then else v97=1;break;end end end end break;end end break;end end end break;end if (v45==2) then v50=nil;v51=nil;v45=8 -5 ;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v53)if (v1(v53,2)==79) then local v82=0;while true do if (v82==0) then v20=v0(v3(v53,1,1));return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v53,16));if v20 then local v104=0;local v105;while true do if (v104==1) then return v105;end if (v104==0) then v105=v5(v84,v20);v20=nil;v104=1;end end else return v84;end break;end end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v54=377 -(142 + 235) ;local v55;local v56;local v57;local v58;while true do if (v54==(0 + 0)) then v55,v56,v57,v58=v1(v16,v19,v19 + (13 -10) );v19=v19 + (2 -1) + 3 ;v54=1 + 0 ;end if (v54==(1 + 0 + 0)) then return (v58 * (16778193 -(553 + 424))) + (v57 * (182603 -117067)) + (v56 * (483 -227)) + v55 ;end end end v25=nil;v18=4;end if (v18==7) then function v30(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...)local v68=v62;local v69=v63;local v70=v64;local v71=v28;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v85=0,v76 do if (v85>=v70) then v74[v85-v70 ]=v75[v85 + 1 ];else v78[v85]=v75[v85 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v86=0;while true do if (v86==1) then if (v81<=37) then if (v81<=18) then if (v81<=8) then if (v81<=3) then if (v81<=1) then if (v81>0) then local v109=0;local v110;while true do if (0==v109) then v110=v80[2];v78[v110]=v78[v110](v13(v78,v110 + 1 ,v80[3]));break;end end else local v111=0;local v112;while true do if (v111==0) then v112=v80[2];v78[v112]=v78[v112]();break;end end end elseif (v81==2) then v78[v80[2]]=v61[v80[3]];else v78[v80[2]]={};end elseif (v81<=5) then if (v81>4) then v72=v80[3];elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=6) then local v117=v80[2];v78[v117](v78[v117 + 1 ]);elseif (v81==7) then v72=v80[3];else v78[v80[2]]=v78[v80[3]] + v78[v80[4]] ;end elseif (v81<=13) then if (v81<=10) then if (v81==9) then v78[v80[2]]=v78[v80[3]] -v78[v80[4]] ;else local v119=v69[v80[3]];local v120;local v121={};v120=v10({},{__index=function(v202,v203)local v204=v121[v203];return v204[1][v204[2]];end,__newindex=function(v205,v206,v207)local v208=0;local v209;while true do if (0==v208) then v209=v121[v206];v209[1][v209[2]]=v207;break;end end end});for v210=1,v80[4] do local v211=0;local v212;while true do if (v211==1) then if (v212[1]==41) then v121[v210-1 ]={v78,v212[3]};else v121[v210-1 ]={v60,v212[3]};end v77[ #v77 + 1 ]=v121;break;end if (v211==0) then v72=v72 + 1 ;v212=v68[v72];v211=1;end end end v78[v80[2]]=v30(v119,v120,v61);end elseif (v81<=11) then local v123=v69[v80[3]];local v124;local v125={};v124=v10({},{__index=function(v213,v214)local v215=v125[v214];return v215[1][v215[2]];end,__newindex=function(v216,v217,v218)local v219=v125[v217];v219[1][v219[2]]=v218;end});for v221=1,v80[4] do local v222=0;local v223;while true do if (v222==0) then v72=v72 + 1 ;v223=v68[v72];v222=1;end if (v222==1) then if (v223[1]==41) then v125[v221-1 ]={v78,v223[3]};else v125[v221-1 ]={v60,v223[3]};end v77[ #v77 + 1 ]=v125;break;end end end v78[v80[2]]=v30(v123,v124,v61);elseif (v81>12) then local v242=v80[2];local v243=v78[v80[3]];v78[v242 + 1 ]=v243;v78[v242]=v243[v80[4]];else local v247=v80[2];v78[v247]=v78[v247](v78[v247 + 1 ]);end elseif (v81<=15) then if (v81==14) then v78[v80[2]][v78[v80[3]]]=v78[v80[4]];else v78[v80[2]]=v60[v80[3]];end elseif (v81<=16) then if (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==17) then v78[v80[2]]();else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=27) then if (v81<=22) then if (v81<=20) then if (v81==19) then v78[v80[2]]=v80[3];else local v133=v80[2];v78[v133](v13(v78,v133 + 1 ,v80[3]));end elseif (v81>21) then v78[v80[2]]=v78[v80[3]][v80[4]];else v61[v80[3]]=v78[v80[2]];end elseif (v81<=24) then if (v81==23) then v78[v80[2]]=v80[3];else v78[v80[2]]=v61[v80[3]];end elseif (v81<=25) then v78[v80[2]][v80[3]]=v80[4];elseif (v81==26) then do return;end else local v252=0;local v253;while true do if (v252==0) then v253=v80[2];v78[v253](v78[v253 + 1 ]);break;end end end elseif (v81<=32) then if (v81<=29) then if (v81>28) then local v144=0;local v145;local v146;while true do if (v144==1) then for v330=1, #v77 do local v331=0;local v332;while true do if (v331==0) then v332=v77[v330];for v363=0, #v332 do local v364=v332[v363];local v365=v364[1];local v366=v364[2];if ((v365==v78) and (v366>=v145)) then v146[v366]=v365[v366];v364[1]=v146;end end break;end end end break;end if (v144==0) then v145=v80[2];v146={};v144=1;end end else v60[v80[3]]=v78[v80[2]];end elseif (v81<=30) then v61[v80[3]]=v78[v80[2]];elseif (v81>31) then local v254=v80[3];local v255=v78[v254];for v304=v254 + 1 ,v80[4] do v255=v255   .. v78[v304] ;end v78[v80[2]]=v255;else local v257=v80[2];local v258=v80[4];local v259=v257 + 2 ;local v260={v78[v257](v78[v257 + 1 ],v78[v259])};for v305=1,v258 do v78[v259 + v305 ]=v260[v305];end local v261=v260[1];if v261 then local v333=0;while true do if (v333==0) then v78[v259]=v261;v72=v80[3];break;end end else v72=v72 + 1 ;end end elseif (v81<=34) then if (v81==33) then local v151=v80[2];v78[v151](v13(v78,v151 + 1 ,v73));elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=35) then v78[v80[2]]=v78[v80[3]] -v78[v80[4]] ;elseif (v81==36) then local v263=0;local v264;while true do if (0==v263) then v264=v78[v80[4]];if  not v264 then v72=v72 + 1 ;else local v358=0;while true do if (v358==0) then v78[v80[2]]=v264;v72=v80[3];break;end end end break;end end else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=56) then if (v81<=46) then if (v81<=41) then if (v81<=39) then if (v81==38) then local v153=v80[2];v78[v153](v13(v78,v153 + 1 ,v80[3]));else local v154=0;local v155;while true do if (v154==0) then v155=v80[2];v78[v155]=v78[v155](v13(v78,v155 + 1 ,v80[3]));break;end end end elseif (v81==40) then for v224=v80[2],v80[3] do v78[v224]=nil;end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=43) then if (v81>42) then local v158=v80[2];local v159={v78[v158](v13(v78,v158 + 1 ,v73))};local v160=0;for v226=v158,v80[4] do v160=v160 + 1 ;v78[v226]=v159[v160];end else local v161=0;local v162;while true do if (v161==0) then v162=v80[2];v78[v162]=v78[v162]();break;end end end elseif (v81<=44) then local v163=v80[2];v78[v163](v13(v78,v163 + 1 ,v73));elseif (v81==45) then do return;end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=51) then if (v81<=48) then if (v81==47) then local v164=v80[2];local v165=v78[v164];local v166=v80[3];for v229=1,v166 do v165[v229]=v78[v164 + v229 ];end else local v167=0;local v168;local v169;local v170;while true do if (v167==0) then v168=v80[2];v169=v78[v168];v167=1;end if (v167==1) then v170=v80[3];for v334=1,v170 do v169[v334]=v78[v168 + v334 ];end break;end end end elseif (v81<=49) then v60[v80[3]]=v78[v80[2]];elseif (v81>50) then local v269=v80[3];local v270=v78[v269];for v315=v269 + 1 ,v80[4] do v270=v270   .. v78[v315] ;end v78[v80[2]]=v270;elseif (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=53) then if (v81>52) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=54) then v78[v80[2]]();elseif (v81==55) then v78[v80[2]][v78[v80[3]]]=v78[v80[4]];elseif v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=66) then if (v81<=61) then if (v81<=58) then if (v81==57) then v78[v80[2]]=v78[v80[3]][v80[4]];else v78[v80[2]]=v78[v80[3]] + v78[v80[4]] ;end elseif (v81<=59) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>60) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v276=0;local v277;local v278;local v279;while true do if (v276==1) then v279=0;for v351=v277,v80[4] do local v352=0;while true do if (0==v352) then v279=v279 + 1 ;v78[v351]=v278[v279];break;end end end break;end if (v276==0) then v277=v80[2];v278={v78[v277](v13(v78,v277 + 1 ,v73))};v276=1;end end end elseif (v81<=63) then if (v81>62) then local v177=v78[v80[4]];if  not v177 then v72=v72 + 1 ;else v78[v80[2]]=v177;v72=v80[3];end else local v178=v80[2];v78[v178]=v78[v178](v78[v178 + 1 ]);end elseif (v81<=64) then v78[v80[2]]={};elseif (v81>65) then v78[v80[2]]=v80[3]~=0 ;else local v283=v80[2];local v284={};for v316=1, #v77 do local v317=0;local v318;while true do if (v317==0) then v318=v77[v316];for v359=0, #v318 do local v360=v318[v359];local v361=v360[1];local v362=v360[2];if ((v361==v78) and (v362>=v283)) then v284[v362]=v361[v362];v360[1]=v284;end end break;end end end end elseif (v81<=71) then if (v81<=68) then if (v81>67) then v78[v80[2]]=v60[v80[3]];else local v183=v80[2];local v184=v80[4];local v185=v183 + 2 ;local v186={v78[v183](v78[v183 + 1 ],v78[v185])};for v232=1,v184 do v78[v185 + v232 ]=v186[v232];end local v187=v186[1];if v187 then local v285=0;while true do if (0==v285) then v78[v185]=v187;v72=v80[3];break;end end else v72=v72 + 1 ;end end elseif (v81<=69) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>70) then local v287=v80[2];local v288,v289=v71(v78[v287](v78[v287 + 1 ]));v73=(v289 + v287) -1 ;local v290=0;for v319=v287,v73 do v290=v290 + 1 ;v78[v319]=v288[v290];end else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=73) then if (v81>72) then local v188=v80[2];local v189=v78[v188];for v235=v188 + 1 ,v80[3] do v7(v189,v78[v235]);end else local v190=v80[2];local v191,v192=v71(v78[v190](v78[v190 + 1 ]));v73=(v192 + v190) -1 ;local v193=0;for v236=v190,v73 do v193=v193 + 1 ;v78[v236]=v191[v193];end end elseif (v81<=74) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==75) then for v322=v80[2],v80[3] do v78[v322]=nil;end else local v294=v80[2];local v295=v78[v80[3]];v78[v294 + 1 ]=v295;v78[v294]=v295[v80[4]];end v72=v72 + 1 ;break;end if (v86==0) then v80=v68[v72];v81=v80[1];v86=1;end end end end;end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v65,v66,v67)if v67 then local v87=(829 + 301) -(369 + 569 + 192) ;local v88;while true do if (v87==(0 -0)) then v88=(v65/((755 -(239 + 514))^(v66-(1 -(1580 -(1183 + 397))))))%((1 + 1)^(((v67-1) -(v66-(239 -(64 + 174)))) + (1330 -(797 + 532)))) ;return v88-(v88%((2 -1) -0)) ;end end else local v89=0 + 0 ;local v90;while true do if (v89==(0 + 0)) then v90=(4 -2)^(v66-(1 + 0)) ;return (((v65%(v90 + v90))>=v90) and (1203 -(373 + 829))) or (731 -(476 + 255)) ;end end end end v22=nil;v18=2;end end end vv9(),...);
