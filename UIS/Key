--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v83=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + ((2569 -(1523 + 114)) -(857 + 74)))) ;return v83-(v83%(569 -(367 + 181 + 20))) ;else local v84=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v84 + v84))>=v84) and (1 + 0)) or (877 -(282 + 595)) ;end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24()local v34,v35,v36,v37=v1(v16,v19,v19 + 3 );v19=v19 + (5 -1) ;return (v37 * ((16778398 -(32 + 85)) -(67 + 1 + 997))) + (v36 * ((14815 + 51991) -(226 + 1044))) + (v35 * (1114 -(1815 -(892 + 65)))) + v34 ;end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v38=0;local v39;local v40;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v38==0) then v39=0;v40=nil;v38=1;end if (v38~=(3 -1)) then else v43=nil;v44=nil;v38=3;end if (v38==(1522 -(1191 + 327))) then while true do if (v39==(0 + 0)) then local v98=698 -(208 + 490) ;while true do if (1~=v98) then else v39=1 + 0 ;break;end if (v98==(0 + 0)) then v40=836 -(660 + 176) ;v41=nil;v98=1 + 0 ;end end end if (v39==3) then v46=nil;while true do if (v40==0) then local v100=202 -(14 + 188) ;while true do if (v100~=1) then else v43={};v44={v41,v42,nil,v43};v100=2 + 0 ;end if ((2 + 0)==v100) then v40=1;break;end if (v100~=0) then else local v103=0;while true do if (v103~=0) then else v41={};v42={};v103=1 -0 ;end if (1~=v103) then else v100=1;break;end end end end end if (v40==1) then local v101=0;while true do if (v101==(2 -0)) then v40=5 -3 ;break;end if (v101==0) then v45=v24();v46={};v101=1;end if (1~=v101) then else for v121=1,v45 do local v122=0 + 0 ;local v123;local v124;while true do if (v122==(1 + 0)) then if (v123==1) then v124=v22()~=(396 -(115 + 281)) ;elseif (v123==2) then v124=v25();elseif (v123==3) then v124=v26();end v46[v121]=v124;break;end if (v122==(0 -0)) then local v223=0;while true do if (v223==(0 + 0)) then v123=v22();v124=nil;v223=2 -1 ;end if (1~=v223) then else v122=1;break;end end end end end v44[10 -7 ]=v22();v101=869 -(550 + 317) ;end end end if (v40==2) then local v102=0 -0 ;while true do if (v102==(0 -0)) then for v125=1,v24() do local v126=0;local v127;local v128;local v129;while true do if (v126~=(0 -0)) then else v127=285 -(134 + 151) ;v128=nil;v126=1;end if (v126==(1666 -(970 + 695))) then v129=nil;while true do if (v127==(1 -0)) then while true do if (v128==0) then v129=v22();if (v21(v129,1,1)~=(1990 -(582 + 1408))) then else local v285=0 -0 ;local v286;local v287;local v288;local v289;local v290;local v291;while true do if (v285==(1 -0)) then v288=nil;v289=nil;v285=7 -5 ;end if (v285~=0) then else v286=1824 -(1195 + 629) ;v287=nil;v285=1;end if (v285==3) then while true do if (v286~=2) then else v291=nil;while true do if (v287~=1) then else local v296=0 -0 ;while true do if (v296==0) then local v298=241 -(187 + 54) ;while true do if (v298==(780 -(162 + 618))) then v290=nil;v291=nil;v298=1 + 0 ;end if (v298==(1 + 0)) then v296=1 -0 ;break;end end end if (v296~=1) then else v287=2;break;end end end if (0~=v287) then else local v297=0;while true do if (v297~=1) then else v287=1 -0 ;break;end if (v297==0) then local v299=0;while true do if (v299==0) then v288=0 + 0 ;v289=nil;v299=1;end if (v299~=(1637 -(1373 + 263))) then else v297=1001 -(451 + 549) ;break;end end end end end if (2==v287) then while true do if (v288==3) then if (v21(v290,3,3)~=(1 + 0)) then else v291[5 -1 ]=v46[v291[6 -2 ]];end v41[v125]=v291;break;end if (v288==2) then local v301=0;local v302;local v303;while true do if ((1384 -(746 + 638))~=v301) then else v302=0 + 0 ;v303=nil;v301=1 -0 ;end if (v301~=1) then else while true do if (v302==(341 -(218 + 123))) then v303=0;while true do if (v303==(1582 -(1535 + 46))) then v288=3;break;end if (v303==0) then local v312=0 + 0 ;local v313;while true do if (v312==0) then v313=0 + 0 ;while true do if (v313==1) then v303=561 -(306 + 254) ;break;end if (v313==(0 + 0)) then if (v21(v290,1 -0 ,1)==(1468 -(899 + 568))) then v291[2]=v46[v291[2 + 0 ]];end if (v21(v290,4 -2 ,605 -(268 + 335) )==(291 -(60 + 230))) then v291[3]=v46[v291[575 -(426 + 146) ]];end v313=1 + 0 ;end end break;end end end end break;end end break;end end end if (v288==1) then local v304=0;local v305;while true do if (v304~=0) then else v305=0;while true do if ((1456 -(282 + 1174))~=v305) then else local v310=811 -(569 + 242) ;local v311;while true do if (v310==(0 -0)) then v311=0 + 0 ;while true do if ((1024 -(706 + 318))~=v311) then else v291={v23(),v23(),nil,nil};if (v289==(1251 -(721 + 530))) then local v314=1271 -(945 + 326) ;while true do if (0==v314) then v291[3]=v23();v291[4]=v23();break;end end elseif (v289==(2 -1)) then v291[3 + 0 ]=v24();elseif (v289==2) then v291[703 -(271 + 429) ]=v24() -((2 + 0)^16) ;elseif (v289~=(1503 -(1408 + 92))) then else local v323=0;local v324;local v325;while true do if (v323==(1087 -(461 + 625))) then while true do if ((1288 -(993 + 295))~=v324) then else v325=0 + 0 ;while true do if (v325==0) then v291[1174 -(418 + 753) ]=v24() -((1 + 1)^(2 + 14)) ;v291[2 + 2 ]=v23();break;end end break;end end break;end if (v323==(0 + 0)) then v324=529 -(406 + 123) ;v325=nil;v323=1;end end end v311=1;end if ((1770 -(1749 + 20))==v311) then v305=1;break;end end break;end end end if (1==v305) then v288=1 + 1 ;break;end end break;end end end if (v288==0) then local v306=0;while true do if ((1323 -(1249 + 73))~=v306) then else v288=1 + 0 ;break;end if (v306==0) then local v309=0;while true do if (0~=v309) then else v289=v21(v129,2,1148 -(466 + 679) );v290=v21(v129,9 -5 ,17 -11 );v309=1901 -(106 + 1794) ;end if (v309~=(1 + 0)) then else v306=1;break;end end end end end end break;end end break;end if (v286==0) then local v295=0 + 0 ;while true do if (v295==0) then v287=0 -0 ;v288=nil;v295=1;end if (v295~=(2 -1)) then else v286=115 -(4 + 110) ;break;end end end if (v286==(585 -(57 + 527))) then v289=nil;v290=nil;v286=2;end end break;end if ((1429 -(41 + 1386))==v285) then v290=nil;v291=nil;v285=106 -(17 + 86) ;end end end break;end end break;end if (v127==0) then local v273=0 + 0 ;while true do if (v273==(0 -0)) then v128=0;v129=nil;v273=2 -1 ;end if (v273==(167 -(122 + 44))) then v127=1;break;end end end end break;end end end for v130=1 -0 ,v24() do v42[v130-(3 -2) ]=v29();end v102=1;end if (v102~=1) then else return v44;end end end end break;end if (v39==(1 + 0)) then local v99=0 + 0 ;while true do if (v99==(0 -0)) then v42=nil;v43=nil;v99=66 -(30 + 35) ;end if (v99~=(1 + 0)) then else v39=2;break;end end end if (v39==2) then v44=nil;v45=nil;v39=3;end end break;end if (v38==3) then v45=nil;v46=nil;v38=1261 -(1043 + 214) ;end if ((3 -2)~=v38) then else v41=nil;v42=nil;v38=2;end end end v30=nil;v18=7;end if (v18==4) then function v25()local v47=1212 -(323 + 889) ;local v48;local v49;local v50;local v51;local v52;local v53;while true do if ((1553 -(1126 + 425))==v47) then v52=v21(v49,426 -(118 + 287) ,83 -(18 + 34) );v53=((v21(v49,612 -(361 + 219) )==(321 -(53 + 267))) and  -(378 -(142 + 235))) or 1 ;v47=1 + (4 -2) ;end if (v47==(414 -(15 + 398))) then v50=978 -(553 + 424) ;v51=(v21(v49,983 -(18 + 964) ,(1277 -(373 + 829)) -55 ) * ((2 + (731 -(476 + 255)))^32)) + v48 ;v47=2;end if (v47==(2 + 1)) then if (v52==(850 -(20 + 830))) then if (v51==(0 + 0)) then return v53 * (126 -(116 + 10)) ;else v52=1 + 0 ;v50=0 -0 ;end elseif (v52==(596 + 1451)) then return ((v51==(738 -(542 + 196))) and (v53 * ((1 -0)/(0 + 0)))) or (v53 * NaN) ;end return v8(v53,v52-(520 + 503) ) * (v50 + (v51/(2^((1149 -(369 + 761)) + 33)))) ;end if (v47==(0 + 0 + 0)) then v48=v24();v49=v24();v47=(2 -0) -1 ;end end end v26=nil;function v26(v54)local v55=0 -0 ;local v56;local v57;while true do if ((239 -(64 + 174))==v55) then v56=v3(v16,v19,(v19 + v54) -(1 + 0 + 0) );v19=v19 + v54 ;v55=2 -0 ;end if (v55==(336 -(144 + 144 + 48))) then v56=nil;if  not v54 then local v97=216 -(42 + 174) ;while true do if (v97==(0 + 0)) then v54=v24();if (v54==(0 + 0)) then return "";end break;end end end v55=(1976 -(1913 + 62)) + 0 ;end if (((950 + 557) -((960 -597) + 1141))==v55) then return v6(v57);end if (v55==2) then v57={};for v90=1581 -(1183 + 397) , #v56 do v57[v90]=v2(v1(v3(v56,v90,v90)));end v55=8 -5 ;end end end v18=5;end if (v18==2) then function v22()local v58=v1(v16,v19,v19);v19=v19 + 1 ;return v58;end v23=nil;function v23()local v59=0 + 0 + 0 ;local v60;local v61;while true do if (v59==(1934 -(565 + 1368))) then return (v61 * (962 -706)) + v60 ;end if (v59==((476 -(41 + 435)) -0)) then v60,v61=v1(v16,v19,v19 + (1663 -(1477 + (1185 -(938 + 63)))) );v19=v19 + (306 -(244 + 60)) ;v59=1 -(0 + 0) ;end end end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v62)if (v1(v62,2)==79) then local v85=0;while true do if (v85==0) then v20=v0(v3(v62,1,1));return "";end end else local v86=v2(v0(v62,16));if v20 then local v92=v5(v86,v20);v20=nil;return v92;else return v86;end end end);v18=1;end if (v18==7) then function v30(v63,v64,v65)local v66=v63[1];local v67=v63[2];local v68=v63[3];return function(...)local v69=v66;local v70=v67;local v71=v68;local v72=v28;local v73=1;local v74= -1;local v75={};local v76={...};local v77=v12("#",...) -1 ;local v78={};local v79={};for v87=0,v77 do if (v87>=v71) then v75[v87-v71 ]=v76[v87 + 1 ];else v79[v87]=v76[v87 + 1 ];end end local v80=(v77-v71) + 1 ;local v81;local v82;while true do v81=v69[v73];v82=v81[1];if (v82<=24) then if (v82<=11) then if (v82<=5) then if (v82<=2) then if (v82<=0) then v79[v81[2]]=v64[v81[3]];elseif (v82>1) then local v146=v81[2];v79[v146](v13(v79,v146 + 1 ,v81[3]));else local v147=0;local v148;while true do if (v147==0) then v148=v81[2];v79[v148]=v79[v148](v13(v79,v148 + 1 ,v81[3]));break;end end end elseif (v82<=3) then if (v79[v81[2]]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82>4) then local v150=v81[2];v79[v150](v79[v150 + 1 ]);else v79[v81[2]]=v79[v81[3]][v81[4]];end elseif (v82<=8) then if (v82<=6) then do return;end elseif (v82>7) then local v153=v81[2];v79[v153]=v79[v153](v79[v153 + 1 ]);else local v155=0;local v156;while true do if (v155==0) then v156=v81[2];v79[v156]=v79[v156](v13(v79,v156 + 1 ,v74));break;end end end elseif (v82<=9) then local v107=v81[2];v79[v107]=v79[v107](v79[v107 + 1 ]);elseif (v82>10) then v79[v81[2]]=v65[v81[3]];else local v159=0;local v160;local v161;local v162;local v163;while true do if (v159==1) then v74=(v162 + v160) -1 ;v163=0;v159=2;end if (v159==0) then v160=v81[2];v161,v162=v72(v79[v160](v13(v79,v160 + 1 ,v81[3])));v159=1;end if (v159==2) then for v254=v160,v74 do v163=v163 + 1 ;v79[v254]=v161[v163];end break;end end end elseif (v82<=17) then if (v82<=14) then if (v82<=12) then if (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82==13) then local v165=0;local v166;local v167;while true do if (v165==1) then v79[v166 + 1 ]=v167;v79[v166]=v167[v81[4]];break;end if (v165==0) then v166=v81[2];v167=v79[v81[3]];v165=1;end end else local v168=0;local v169;while true do if (v168==0) then v169=v81[2];v79[v169](v13(v79,v169 + 1 ,v81[3]));break;end end end elseif (v82<=15) then v79[v81[2]]();elseif (v82==16) then v79[v81[2]]=v64[v81[3]];else v79[v81[2]]=v81[3];end elseif (v82<=20) then if (v82<=18) then do return v79[v81[2]];end elseif (v82==19) then for v215=v81[2],v81[3] do v79[v215]=nil;end else v79[v81[2]]=v79[v81[3]][v81[4]];end elseif (v82<=22) then if (v82==21) then v79[v81[2]]={};else local v177=0;local v178;local v179;while true do if (0==v177) then v178=v81[2];v179={};v177=1;end if (v177==1) then for v257=1, #v78 do local v258=v78[v257];for v274=0, #v258 do local v275=0;local v276;local v277;local v278;while true do if (v275==0) then v276=v258[v274];v277=v276[1];v275=1;end if (v275==1) then v278=v276[2];if ((v277==v79) and (v278>=v178)) then v179[v278]=v277[v278];v276[1]=v179;end break;end end end end break;end end end elseif (v82==23) then v79[v81[2]]=v65[v81[3]];else local v182=v81[2];v79[v182]=v79[v182](v13(v79,v182 + 1 ,v74));end elseif (v82<=37) then if (v82<=30) then if (v82<=27) then if (v82<=25) then v79[v81[2]][v81[3]]=v81[4];elseif (v82>26) then v79[v81[2]][v81[3]]=v81[4];elseif (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=28) then local v111=v81[2];local v112={};for v132=1, #v78 do local v133=v78[v132];for v186=0, #v133 do local v187=v133[v186];local v188=v187[1];local v189=v187[2];if ((v188==v79) and (v189>=v111)) then v112[v189]=v188[v189];v187[1]=v112;end end end elseif (v82>29) then v79[v81[2]]=v79[v81[3]];else local v192=v81[2];local v193,v194=v72(v79[v192](v13(v79,v192 + 1 ,v81[3])));v74=(v194 + v192) -1 ;local v195=0;for v217=v192,v74 do v195=v195 + 1 ;v79[v217]=v193[v195];end end elseif (v82<=33) then if (v82<=31) then local v113=v81[2];v79[v113]=v79[v113](v13(v79,v113 + 1 ,v81[3]));elseif (v82>32) then do return v79[v81[2]];end else v79[v81[2]]=v81[3];end elseif (v82<=35) then if (v82>34) then if (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82==36) then v73=v81[3];else local v199=0;local v200;while true do if (v199==0) then v200=v81[2];do return v13(v79,v200,v200 + v81[3] );end break;end end end elseif (v82<=43) then if (v82<=40) then if (v82<=38) then v79[v81[2]]();elseif (v82==39) then local v201=0;local v202;local v203;local v204;while true do if (v201==1) then v204={};v203=v10({},{__index=function(v259,v260)local v261=0;local v262;while true do if (0==v261) then v262=v204[v260];return v262[1][v262[2]];end end end,__newindex=function(v263,v264,v265)local v266=v204[v264];v266[1][v266[2]]=v265;end});v201=2;end if (v201==0) then v202=v70[v81[3]];v203=nil;v201=1;end if (v201==2) then for v268=1,v81[4] do v73=v73 + 1 ;local v269=v69[v73];if (v269[1]==30) then v204[v268-1 ]={v79,v269[3]};else v204[v268-1 ]={v64,v269[3]};end v78[ #v78 + 1 ]=v204;end v79[v81[2]]=v30(v202,v203,v65);break;end end else local v205=v81[2];v79[v205](v79[v205 + 1 ]);end elseif (v82<=41) then v79[v81[2]][v81[3]]=v79[v81[4]];elseif (v82==42) then do return;end else v79[v81[2]]=v79[v81[3]];end elseif (v82<=46) then if (v82<=44) then local v117=v70[v81[3]];local v118;local v119={};v118=v10({},{__index=function(v134,v135)local v136=0;local v137;while true do if (v136==0) then v137=v119[v135];return v137[1][v137[2]];end end end,__newindex=function(v138,v139,v140)local v141=v119[v139];v141[1][v141[2]]=v140;end});for v143=1,v81[4] do local v144=0;local v145;while true do if (v144==1) then if (v145[1]==30) then v119[v143-1 ]={v79,v145[3]};else v119[v143-1 ]={v64,v145[3]};end v78[ #v78 + 1 ]=v119;break;end if (v144==0) then v73=v73 + 1 ;v145=v69[v73];v144=1;end end end v79[v81[2]]=v30(v117,v118,v65);elseif (v82>45) then for v220=v81[2],v81[3] do v79[v220]=nil;end else v79[v81[2]][v81[3]]=v79[v81[4]];end elseif (v82<=48) then if (v82>47) then local v210=0;local v211;local v212;while true do if (v210==1) then v79[v211 + 1 ]=v212;v79[v211]=v212[v81[4]];break;end if (v210==0) then v211=v81[2];v212=v79[v81[3]];v210=1;end end else v73=v81[3];end elseif (v82>49) then v79[v81[2]]={};elseif (v79[v81[2]]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end v73=v73 + 1 ;end end;end return v30(v29(),{},v17)(...);end end end vv9(),...);end
